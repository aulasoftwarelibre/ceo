# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'es'
    router.request_context.host: '%env(ROUTER_REQUEST_CONTEXT_HOST)%'
    router.request_context.scheme: 'https'
    router.request_context.base_url: '%env(ROUTER_REQUEST_CONTEXT_BASE_URL)%'
    mail_from: '%env(MAIL_FROM)%'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        bind:
            $mailFrom: '%mail_from%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../src/{Admin,Command,Entity,Migrations,Tests}'

    # controllers are imported separately to make sure they
    # have the tag that allows actions to type-hint services
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # KnpMenuBundle
    App\Menu\Builder:
        arguments: ['@knp_menu.factory']
        public: true
        tags:
            - { name: 'knp_menu.menu_builder', method: 'followingMenu', alias: 'followingMenu'}
            - { name: 'knp_menu.menu_builder', method: 'mainMenu', alias: 'mainMenu'}

    App\Menu\SemanticMenuRenderer:
        arguments:
            - '@knp_menu.matcher'
            - '%knp_menu.renderer.list.options%'
            - '%kernel.charset%'
        public: true
        tags:
            - { name: 'knp_menu.renderer', alias: 'semantic'}

    # TacticianBundle
    App\Handler\:
        resource: '../src/Handler/'
        public: true
        tags:
            - { name: 'tactician.handler', typehints: true }

    Telegram\Bot\Api: '@App\Services\Telegram\TelegramService'

    App\Services\Telegram\TelegramService:
        arguments: [ '%env(TELEGRAM_BOT_API)%' ]
        calls:
            - ['setTacticianBus', ['@tactician.commandbus.default'] ]

